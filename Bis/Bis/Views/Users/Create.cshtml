@model Bis.Models.User

@{
    ViewBag.Title = "Create";
}

<div class="row">

    <div class="col-md-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">New User</h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label>Name</label>
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-4">
                            <label>Login Name</label>
                            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-4">
                            <label>password</label>
                            @*<input type="password" class="form-control" placeholder="Your strong password">*@
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { type = "password", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group col-md-4">
                            <label>Role</label>
                            @Html.DropDownList("role", new List<SelectListItem>
                         {
                             new SelectListItem{ Text="Admin", Value="Admin"},
                             new SelectListItem{ Text="Employee", Value="Employee"},
                             new SelectListItem{ Text="Manager", Value="Manager"}
                         }, "--- Select ---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-4">
                            <label>Status</label>
                            @Html.DropDownList("status", new List<SelectListItem>
                            {
                                new SelectListItem{ Text="Active", Value="Active"},
                                new SelectListItem{ Text="InActive", Value="InActive"}
                            }, "--- Select ---", new { @class = "form-control" })
                            @*@Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="text-right">
                        <button type="submit" value="Create" class="btn btn-success">Submit</button>
                        @Html.ActionLink("Cancel", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}