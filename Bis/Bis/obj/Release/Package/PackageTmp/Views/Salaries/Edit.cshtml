@model Bis.Models.Salary

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>



    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id)
                <div class="card">
                    <div class="card-header header-elements-inline">
                        <h5 class="card-title">Edit Salary</h5>
                        <div class="header-elements">
                            <div class="list-icons">
                                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-md-4">
                                <label>Employee Id</label>
                                @Html.DropDownList("employeeId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.employeeId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-4">
                                <label>Date</label>
                                <div class="input-group">
                                    <span class="input-group-prepend">
                                        <span class="input-group-text"><i class="icon-calendar22"></i></span>
                                    </span>
                                    @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control daterange-single-date" } })
                                    @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                <label>No of days present</label>
                                @Html.EditorFor(model => model.noOfDaysPresent, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.noOfDaysPresent, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Basic Salary</label>
                                @Html.EditorFor(model => model.basicSalary, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.basicSalary, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-4">
                                <label>Travel Allowance</label>
                                @Html.EditorFor(model => model.travelAllowance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.travelAllowance, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Loan</label>
                                @Html.EditorFor(model => model.loan, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.loan, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-4">
                                <label>Bonus</label>
                                @Html.EditorFor(model => model.bonus, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.bonus, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Advance</label>
                                @Html.EditorFor(model => model.advance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.advance, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                <label>TDS</label>
                                @Html.EditorFor(model => model.tDS, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.tDS, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Cash Voucher</label>
                                @Html.EditorFor(model => model.cashVoucher, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.cashVoucher, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Certification Fees</label>
                                @Html.EditorFor(model => model.certificationFees, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.certificationFees, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Total Deduction</label>
                                @Html.EditorFor(model => model.totalDeduction, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.totalDeduction, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Gross Salary</label>
                                @Html.EditorFor(model => model.grossSalary, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.grossSalary, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Actual Salary</label>
                                @Html.EditorFor(model => model.actualSalary, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.actualSalary, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Net Salary</label>
                                @Html.EditorFor(model => model.netSalary, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.netSalary, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                <label>Project Salary</label>
                                @Html.EditorFor(model => model.projectSalary, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.projectSalary, "", new { @class = "text-danger" })
                            </div>


                        </div>
                        <div class="text-right">
                            <button type="submit" value="Create" class="btn btn-success">Submit</button>
                            @Html.ActionLink("Cancel", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
