@model Bis.Models.Charge

@{
    ViewBag.Title = "Edit";
}

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">Edit Charge</h5>
                    <div class="header-elements">
                        <div class="list-icons">
                            @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label>LocationId</label>
                            @Html.DropDownList("locationId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.locationId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            <label>CompanyId</label>
                            @Html.DropDownList("companyId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.companyId, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>Employee StayCharge</label>
                            @Html.EditorFor(model => model.employeeStayCharge, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.employeeStayCharge, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>Employee VisitCharge</label>
                            @Html.EditorFor(model => model.employeeVisitCharge, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.employeeVisitCharge, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>Company StayCharge</label>
                            @Html.EditorFor(model => model.companyStayCharge, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.companyStayCharge, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>Company VisitCharge</label>
                            @Html.EditorFor(model => model.companyVisitCharge, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.companyVisitCharge, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>Employee Claim Charge</label>
                            @Html.EditorFor(model => model.employeeClaimCharge, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.employeeClaimCharge, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>Company Claim Charge</label>
                            @Html.EditorFor(model => model.companyClaimCharge, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.companyClaimCharge, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>Remark</label>
                            <div>
                                @Html.TextAreaFor(model => model.remark, new { style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.remark, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                    <div class="text-right">
                        <button type="submit" value="Create" class="btn btn-success">Submit</button>
                        @Html.ActionLink("Cancel", "Index", null, htmlAttributes: new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

